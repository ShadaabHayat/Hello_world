apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-load-test
  labels:
    app: {{ .Release.Name }}-load-test
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-load-test
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-load-test
    spec:
      containers:
      - name: k6
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: reports
          mountPath: /reports
        {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
      - name: reports
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-reports-pvc
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ .Values.scheduling.antiAffinityAppLabel }}
              topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
      topologySpreadConstraints:
        - maxSkew: {{ .Values.scheduling.maxSkew }}
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: {{ .Values.scheduling.whenUnsatisfiable }}
          labelSelector:
            matchLabels:
              app: {{ .Release.Name }}-load-test

apiVersion: v1
kind: Service
metadata:
  name: cluster
spec:
  clusterIP: None
  selector:
    app: kafka-cluster
  ports:
    - protocol: TCP
      port: 29092
      targetPort: 29092
      name: kafka1
    - protocol: TCP
      port: 29093
      targetPort: 29093
      name: controller
    - protocol: TCP
      port: 9092
      targetPort: 9092
      name: external
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-cluster-common-props
  namespace: default
data:
  KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
  KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
  KAFKA_CONTROLLER_QUORUM_VOTERS: '0@kafka-cluster-0.cluster.default.svc.cluster.local:29093,1@kafka-cluster-1.cluster.default.svc.cluster.local:29093,2@kafka-cluster-2.cluster.default.svc.cluster.local:29093'
  KAFKA_PROCESS_ROLES: 'broker,controller'
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: '0'
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '3'
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '3'
  CLUSTER_ID: 'p8fFEbKGQ22B6M_Da_vCBw'
  KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-cluster-bootstrap-servers
  namespace: default
data:
  BOOTSTRAP_SERVERS: 'kafka-cluster-0.cluster.default.svc.cluster.local:29092,kafka-cluster-1.cluster.default.svc.cluster.local:29092,kafka-cluster-2.cluster.default.svc.cluster.local:29092'
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-cluster
  namespace: default
  labels:
    app: kafka-cluster
spec:
  replicas: 3
  serviceName: cluster
  selector:
    matchLabels:
      app: kafka-cluster
  template:
    metadata:
      labels:
        app: kafka-cluster
    spec:
      containers:
      - name: kafka-cluster-node
        image: confluentinc/cp-kafka:7.8.0
        envFrom:
        - configMapRef:
            name: kafka-cluster-common-props
        ports:
          - containerPort: 29092
            name: internal
          - containerPort: 29093
            name: controller
          - containerPort: 9092
            name: external
        env:
          - name: KAFKA_NODE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['statefulset.kubernetes.io/pod-name']
          - name: KAFKA_LISTENERS
            value: "INTERNAL://$(NODE_NAME).cluster.default.svc.cluster.local:29092,CONTROLLER://$(NODE_NAME).cluster.default.svc.cluster.local:29093,EXTERNAL://0.0.0.0:9092"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "INTERNAL://$(NODE_NAME).cluster.default.svc.cluster.local:29092,EXTERNAL://localhost:9092"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-schema-registry
spec:
  selector:
    app: kafka-schema-registry
  ports:
    - protocol: TCP
      port: 80
      targetPort: registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-schema-registry
  namespace: default
  labels:
    app: kafka-schema-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-schema-registry
  template:
    metadata:
      labels:
        app: kafka-schema-registry
    spec:
      enableServiceLinks: false
      containers:
      - name: kafka-schema-registry
        image: confluentinc/cp-schema-registry:7.8.0
        ports:
          - containerPort: 8081
            name: registry
        env:
          - name: SCHEMA_REGISTRY_HOST_NAME
            value: "kafka-schema-registry.default.svc.cluster.local"
          - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
            valueFrom:
              configMapKeyRef:
                name: kafka-cluster-bootstrap-servers
                key: BOOTSTRAP_SERVERS
          - name: SCHEMA_REGISTRY_KAFKASTORE_TOPIC
            value: "_schema_registry"
          - name: SCHEMA_REGISTRY_LISTENERS
            value: 'http://0.0.0.0:8081'
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
spec:
  selector:
    app: kafka-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: webui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
  namespace: default
  labels:
    app: kafka-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui:v0.7.2
        envFrom:
        - configMapRef:
            name: kafka-cluster-common-props
        ports:
          - containerPort: 8080
            name: webui
        env:
          - name: KAFKA_CLUSTERS_0_NAME
            value: 'local'
          - name: DYNAMIC_CONFIG_ENABLED
            value: 'true'
          - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
            valueFrom:
              configMapKeyRef:
                name: kafka-cluster-bootstrap-servers
                key: BOOTSTRAP_SERVERS
          - name: KAFKA_CLUSTERS_0_SCHEMAREGISTRY
            value: 'http://kafka-schema-registry.default.svc.cluster.local'
          - name: KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME
            value: 'connect'
          - name: KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS
            value: 'http://kafka-connect.default.svc.cluster.local'

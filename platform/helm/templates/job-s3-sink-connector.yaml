{{- define "configmapHash" }}
  {{- include "configmapYaml" . | toYaml | sha256sum | trunc 10 }}
{{- end }}

{{- define "jobYaml" }}
{{- $root := .root }}
{{- $connector := .connector }}
{{- $configmapHash := include "configmapHash" $root }}
{{- $jobName := printf "%s-connector-%s-job-%s" $root.Release.Name $connector .jobSuffix }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $jobName }}
  namespace: {{ $root.Release.Namespace }}
  annotations:
    configmap.hash: "{{ $configmapHash }}"
    # helm.sh/hook-weight: 1
    # argocd.argoproj.io/hook: PostSync
    # argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 3
  template:
    metadata:
      labels:
        app: {{ $jobName }}
    spec:
      restartPolicy: Never
      initContainers:
        - name: wait-for-kafka-connect
          image: {{ $root.Values.image.repository }}:{{ $root.Values.image.tag }}
          command:
            - sh
            - -c
            - |
              echo "Kafka Connect is available."
          env:
            - name: KAFKA_CONNECT_URI
              value: {{ $root.Values.kafkaConnectHost }}.{{ $root.Release.Namespace }}.svc.cluster.local:{{ $root.Values.kafkaConnectPort }}
      containers:
        - name: {{ $connector }}-connector
          image: {{ $root.Values.image.repository }}:{{ $root.Values.image.tag }}
          envFrom:
            - configMapRef:
                name: {{ $root.Release.Name }}-envs
          env:
            - name: KAFKA_CONNECT_URI
              value: {{ $root.Values.kafkaConnectHost }}.{{ $root.Release.Namespace }}.svc.cluster.local:{{ $root.Values.kafkaConnectPort }}
            - name: CONNECTOR_NAME
              value: {{ $connector }}
          command:
            - sh
            - -c
            - |
              echo "Kafka Connect ${CONNECTOR_NAME} Connector configuration complete."
              sleep 8
          volumeMounts:
            - name: configmap
              mountPath: /etc/config-s3-{{ $connector }}.json
              subPath: {{ $connector }}-configs.json
      volumes:
        - name: configmap
          configMap:
            name: {{ $root.Release.Name }}-connector-configs
{{- end }}

{{- range $connector := .Values.connectors }}
{{- $jobSuffix := include "jobYaml" (dict "root" $ "connector" $connector "jobSuffix" "") | toYaml | sha256sum | trunc 10 }}
{{- include "jobYaml" (dict "root" $ "connector" $connector "jobSuffix" $jobSuffix) }}
{{- end }}

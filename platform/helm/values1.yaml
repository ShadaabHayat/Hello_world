global:
  cluster_name: ztna1r1

replicaCount: 1

image:
  repository: public.ecr.aws/extremecloud/al # Extreme's ECR Amazon Linux 2 image
  tag: 2

env: {}

# List of connectors to enable. The configuration for each connector will be
# read from a file with the same name in the config folder.
connectors:
  - uz-table-data
  - intel-xvs-table-data
  - uz-timeseries-data
  
# Overrides allow modifying values in a connector's default configuration or defining a new connector.
# Example:
# configOverrides:
#   anotherMain:
#     inherit: "config/main.yaml"  # Inherit settings from an existing configuration file
#     key: "value"  # Define custom values
configOverrides:
  uz-table-data:
    inherit: "config/uz-main.yaml"
    s3.bucket.name: "uz-stateful-bronze-dev-442426878685"
    transforms.InsertEnvInfo.static.value: "test"
    transforms.InsertRDCInfo.static.value: "ws2r1"
  
  intel-xvs-table-data:
    inherit: "config/intel-xvs-base.yaml"
    errors.deadletterqueue.topic.name: "aicore-intel-xvs-dlq"
    s3.bucket.name: "intel-timeseries-bronze-dev-442426878685"
    transforms.InsertEnvInfo.static.value: "test"
    transforms.InsertRDCInfo.static.value: "ws2r1"

  uz-timeseries-data:
    inherit: "config/uz-timeseries-base.yaml"
    errors.deadletterqueue.topic.name: "aicore-uztna-timeseries-dlq"
    s3.bucket.name: "uz-timeseries-bronze-dev-442426878685"
    transforms.InsertRDCInfo.static.value: "ws2r1"
    transforms.InsertEnvInfo.static.value: "test"

kafkaConnectHost: aicore-kafka-connect
kafkaConnectPort: 8083

resources:
  requests:
    memory: "64Mi"
    cpu: "50m"
  limits:
    memory: "128Mi"
    cpu: "100m"

cp-kafka-connect-enabled: true
cp-schema-registry-enabled: false

cp-kafka-connect:
  image: 438465127823.dkr.ecr.us-east-1.amazonaws.com/aicore-ingestion-engine/kafka-connect-custom
  imageTag: premain_285a23f

  init:
    enabled: true
    image: 438465127823.dkr.ecr.us-east-1.amazonaws.com/aicore-ingestion-engine/kafka-connect-init
    imageTag: latest
    imagePullPolicy: Always
    volumeMounts:
      - name: shared
        mountPath: /dst
  volumeMounts:
   - name: shared
     mountPath: /opt/kafka-schemas
     subPath: schemas
  volumes:
   - name: shared
     emptyDir: {}

  replicaCount: 3
  cp-schema-registry:
   url: "aicore-kafka-schema-registry:8081"
  kafka:
    bootstrapServers: "PLAINTEXT://common-kafka.common.svc.cluster.local:9092"
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "8Gi"
      cpu: "2"
  heapOptions: "-Xms2G -Xmx8G"

cp-schema-registry:
  image: 081731760779.dkr.ecr.us-east-1.amazonaws.com/aicore/custom-images/confluentinc/cp-schema-registry
  imageTag: 7.7.1
  kafka:
    bootstrapServers: "PLAINTEXT://common-kafka.common.svc.cluster.local:9092"

prometheusAlerts:
  enabled: true
  name: aicore-ingestion-engine-rules
  groupName: aicore.rules
  alerts:
    s3SinkRecordThreshold: 1000
    s3SinkRecordDuration: 5m
    s3SinkRecordSeverity: warning
    connectorStatusDuration: 5m
    connectorStatusSeverity: critical

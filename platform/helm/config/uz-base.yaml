# All keys must be flat.
connector.class: "io.confluent.connect.s3.S3SinkConnector"
errors.tolerance: "all"
key.converter: "org.apache.kafka.connect.storage.StringConverter"
key.converter.schemas.enable: true
locale: "en-US"
partition.field.format.path: true
partition.field.name: "rdc, env"
partitioner.class: "com.canelmas.kafka.connect.FieldAndTimeBasedPartitioner"
path.format: "'year'=YYYY/'month'=MM/'day'=dd"
s3.region: "us-east-1"
schema.compatibility: "FULL_TRANSITIVE"
storage.class: "io.confluent.connect.s3.storage.S3Storage"
timestamp.extractor: "RecordField"
timestamp.field: "aicore_ingestion_time"
timezone: "UTC"
transforms: "fieldsWhitelist, InsertRDCInfo, InsertEnvInfo, Mask_aicore_public_users_user, Mask_authdb_users_user_session,Mask_authdb_users_userprofiles,Mask_resourcedb_resources_service,Mask_aicore_public_resources_device,Mask_aicore_public_end_system, Mask_authdb_users_useraccessgroups,Mask_resourcedb_locations_userlastlocation,InsertTimeStamp,tsFormat"
transforms.fieldsWhitelist.type: "org.extremenetworks.com.Whitelister${ESCAPE_CHAR}Value"
transforms.fieldsWhitelist.schema.directory: "/opt/kafka/schemas/"
transforms.fieldsWhitelist.schema.type: "avro"
transforms.fieldsWhitelist.schema.suffix: ".avsc"
transforms.fieldsWhitelist.file.schema.cache.ttl.minutes: 10
transforms.fieldsWhitelist.file.schema.cache.max.size: 100
transforms.fieldsWhitelist.updated.schema.cache.size: 100
transforms.fieldsWhitelist.ignore.missing.schema: false
transforms.InsertEnvInfo.static.field: "env"
transforms.InsertEnvInfo.type: "org.apache.kafka.connect.transforms.InsertField${ESCAPE_CHAR}Value"
transforms.InsertRDCInfo.static.field: "rdc"
transforms.InsertRDCInfo.type: "org.apache.kafka.connect.transforms.InsertField${ESCAPE_CHAR}Value"
transforms.Mask_aicore_public_end_system.mask.fields: "mac_address,user_name,device_name,serial_number,ip_address,ipv6_address,host_name,device_location,user_principal_name,user_email,raw_mac_address,eap_tls_certificate_serial_number,owner_id,org_id"
transforms.Mask_aicore_public_end_system.topic.name: "uz_endsystem.public.end_systems"
transforms.Mask_aicore_public_end_system.type: "org.extremenetworks.com.MaskCustomFields${ESCAPE_CHAR}Value"
transforms.Mask_aicore_public_end_system.mask.type : "hash"
transforms.Mask_aicore_public_resources_device.mask.fields: "local_ip,model_name,model_number,public_access_key,preshared_key,private_key,private_ip,public_ip,mac_address,ipv6_address,raw_mac_address,created_by_email,model_serial_number,last_login_user"
transforms.Mask_aicore_public_resources_device.topic.name: "uz_resourcedb.public.resources_device"
transforms.Mask_aicore_public_resources_device.type: "org.extremenetworks.com.MaskCustomFields${ESCAPE_CHAR}Value"
transforms.Mask_aicore_public_resources_device.mask.type : "hash"
transforms.Mask_aicore_public_users_user.mask.fields: "password,email,first_name,last_name,secret_2fa_key,scim_username,verification_code,role_id,profile_image,scim_external_id,jit_external_id"
transforms.Mask_aicore_public_users_user.topic.name: "uz_authdb.public.users_user"
transforms.Mask_aicore_public_users_user.type: "org.extremenetworks.com.MaskCustomFields${ESCAPE_CHAR}Value"
transforms.Mask_aicore_public_users_user.mask.type : "hash"
transforms.Mask_authdb_users_useraccessgroups.mask.fields: "user_id"
transforms.Mask_authdb_users_useraccessgroups.topic.name: "uz_authdb.public.users_useraccessgroups"
transforms.Mask_authdb_users_useraccessgroups.type: "org.extremenetworks.com.MaskCustomFields${ESCAPE_CHAR}Value"
transforms.Mask_authdb_users_useraccessgroups.mask.type : "hash"
transforms.Mask_authdb_users_user_session.mask.fields: "user_id"
transforms.Mask_authdb_users_user_session.topic.name: "uz_authdb.public.users_user_session"
transforms.Mask_authdb_users_user_session.type: "org.extremenetworks.com.MaskCustomFields${ESCAPE_CHAR}Value"
transforms.Mask_authdb_users_user_session.mask.type : "hash"
transforms.Mask_authdb_users_userprofiles.mask.fields: "user_id,city,country,state,zip_code"
transforms.Mask_authdb_users_userprofiles.topic.name: "uz_authdb.public.users_userprofile"
transforms.Mask_authdb_users_userprofiles.type: "org.extremenetworks.com.MaskCustomFields${ESCAPE_CHAR}Value"
transforms.Mask_authdb_users_userprofiles.mask.type : "hash"
transforms.Mask_resourcedb_resources_service.mask.fields: "local_ip"
transforms.Mask_resourcedb_resources_service.topic.name: "uz_resourcedb.public.resources_service"
transforms.Mask_resourcedb_resources_service.type: "org.extremenetworks.com.MaskCustomFields${ESCAPE_CHAR}Value"
transforms.Mask_resourcedb_resources_service.mask.type : "hash"
transforms.Mask_resourcedb_locations_userlastlocation.mask.fields: "user_id"
transforms.Mask_resourcedb_locations_userlastlocation.topic.name: "uz_resourcedb.public.locations_userlastlocation"
transforms.Mask_resourcedb_locations_userlastlocation.type: "org.extremenetworks.com.MaskCustomFields${ESCAPE_CHAR}Value"
transforms.Mask_resourcedb_locations_userlastlocation.mask.type : "hash"
transforms.InsertTimeStamp.timestamp.field: "aicore_ingestion_time"
transforms.InsertTimeStamp.type: "org.apache.kafka.connect.transforms.InsertField${ESCAPE_CHAR}Value"
transforms.tsFormat.field: "aicore_ingestion_time"
transforms.tsFormat.format: "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
transforms.tsFormat.target.type: "string"
transforms.tsFormat.type: "org.apache.kafka.connect.transforms.TimestampConverter${ESCAPE_CHAR}Value"
value.converter: "io.confluent.connect.avro.AvroConverter"
value.converter.schema.registry.url: "http://cp-schema-registry-common-kafka.common.svc.cluster.local:8081"
aws.access.key.id: $AWS_ACCESS_KEY_ID
aws.secret.access.key: $AWS_SECRET_ACCESS_KEY
aws.credentials.provider: "com.amazonaws.auth.AWSStaticCredentialsProvider"
value.converter.schemas.enable: true

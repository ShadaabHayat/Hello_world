[{
  "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
  "database.hostname": "postgres-test",
  "database.port": "5432",
  "database.user": "postgres",
  "database.password": "1234",
  "database.dbname": "postgres",
  "database.server.name": "fullfillment",
  "topic.prefix": "aicore",
  "plugin.name": "pgoutput",
  "transforms": "unwrap",
  "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
  "transforms.unwrap.drop.tombstones": "false",
  "transforms.unwrap.delete.handling.mode": "rewrite",
  "transforms.unwrap.add.fields": "op,ts_ms",
  "transforms.unwrap.add.headers": "db,table,id,schema,version",
  "value.converter": "io.confluent.connect.avro.AvroConverter",
  "key.converter":"org.apache.kafka.connect.storage.StringConverter",
  "key.converter.schemas.enable":false,
  "value.converter.schemas.enable": "true",
  "value.converter.schema.registry.url": "http://schema-registry:8081",
  "slot.name" : "aicore_slot"
},

{
  "connector.class": "io.confluent.connect.s3.S3SinkConnector",
  "storage.class": "io.confluent.connect.s3.storage.S3Storage",
  "s3.region": "eu-west-1",
  "s3.bucket.name": "my-bucket",
  "topics.dir": "warehouse",
  "flush.size": "5",
  "schema.compatibility": "NONE",
  "tasks.max": "4",
  "errors.tolerance": "all",
  "errors.deadletterqueue.topic.name":"aicore-dlq",
  "errors.deadletterqueue.topic.replication.factor": 1,
  "errors.deadletterqueue.context.headers.enable":true,
  "store.url": "http://minio:9000",
  "topics": "aicore.public.resources_device,aicore.public.resources_devicegroup,aicore.public.users_user,aicore.public.access_groups_accessgroup,aicore.public.users_useraccessgroups,aicore.public.resources_service,aicore.public.resources_project,aicore.public.resources_projectservice,aicore.public.policies_policy",
  "key.converter.schemas.enable": "true",
  "key.converter": "org.apache.kafka.connect.storage.StringConverter",
  "value.converter.schemas.enable": "false",
  "value.converter": "io.confluent.connect.avro.AvroConverter",
  "value.converter.schema.registry.url": "http://schema-registry:8081",
  "transforms": "InsertRDCInfo, InsertEnvInfo, MaskUsersRole, MaskUser, InsertTimeStamp, tsFormat",
  "transforms.MaskUsersRole.type":  "org.extremenetworks.com.MaskCustomFields$Value",
  "transforms.MaskUsersRole.mask.fields":"name",
  "transforms.MaskUsersRole.topic.name":"aicore.public.users_role",
  "transforms.MaskUser.type":  "org.extremenetworks.com.MaskCustomFields$Value",
  "transforms.MaskUser.mask.fields":"email, password",
  "transforms.MaskUser.topic.name":"aicore.public.users_user",
  "transforms.InsertRDCInfo.type": "org.apache.kafka.connect.transforms.InsertField$Value",
  "transforms.InsertRDCInfo.static.field": "rdc",
  "transforms.InsertRDCInfo.static.value": "feature-3",
  "transforms.InsertEnvInfo.type": "org.apache.kafka.connect.transforms.InsertField$Value",
  "transforms.InsertEnvInfo.static.field": "env",
  "transforms.InsertEnvInfo.static.value": "feature",
  "transforms.InsertTimeStamp.type": "org.apache.kafka.connect.transforms.InsertField$Value",
  "transforms.InsertTimeStamp.predicate": "match_resources_devicegroup_devices_topic_name",
  "transforms.InsertTimeStamp.timestamp.field": "last_modified_at",
  "transforms.tsFormat.predicate": "match_resources_devicegroup_devices_topic_name",
  "transforms.tsFormat.type": "org.apache.kafka.connect.transforms.TimestampConverter$Value",
  "transforms.tsFormat.target.type": "string",
  "transforms.tsFormat.field": "last_modified_at",
  "transforms.tsFormat.format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "predicates": "match_resources_devicegroup_devices_topic_name",
  "predicates.match_resources_devicegroup_devices_topic_name.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
  "predicates.match_resources_devicegroup_devices_topic_name.pattern": "aicore.public.resources_devicegroup_devices",
  "partitioner.class": "com.canelmas.kafka.connect.FieldAndTimeBasedPartitioner",
  "partition.field.format.path" : true,
  "partition.field.name" : "rdc, env",
  "path.format": "'year'=YYYY/'month'=MM/'day'=dd",
  "timestamp.extractor" : "RecordField",
  "timestamp.field" : "last_modified_at",
  "partition.duration.ms": "60000",
  "locale": "en-US",
  "timezone": "UTC",
  "format.class": "io.confluent.connect.s3.format.parquet.ParquetFormat",
  "parquet.codec": "gzip"
},
{
  "connector.class": "io.confluent.connect.s3.S3SinkConnector",
  "storage.class": "io.confluent.connect.s3.storage.S3Storage",
  "s3.region": "eu-west-1",
  "s3.bucket.name": "my-bucket",
  "topics.dir": "dlq",
  "flush.size": "1",
  "schema.compatibility": "NONE",
  "tasks.max": "1",
  "store.url": "http://minio:9000",
  "topics": "aicore-dlq",
  "errors.tolerance": "all",
  "errors.log.enable":true,
  "errors.log.include.messages":true,
  "key.converter.schemas.enable": "true",
  "key.converter": "org.apache.kafka.connect.storage.StringConverter",
  "value.converter.schemas.enable": "false",
  "value.converter": "io.confluent.connect.avro.AvroConverter",
  "value.converter.schema.registry.url": "http://schema-registry:8081",
  "transforms": "InsertRDCInfo, InsertEnvInfo, InsertTimeStamp, tsFormat",
  "transforms.InsertRDCInfo.type": "org.apache.kafka.connect.transforms.InsertField$Value",
  "transforms.InsertRDCInfo.static.field": "rdc",
  "transforms.InsertRDCInfo.static.value": "'$RDC_INFO'",
  "transforms.InsertEnvInfo.type": "org.apache.kafka.connect.transforms.InsertField$Value",
  "transforms.InsertEnvInfo.static.field": "env",
  "transforms.InsertEnvInfo.static.value": "'$ENV_INFO'",
  "transforms.InsertTimeStamp.type": "org.apache.kafka.connect.transforms.InsertField$Value",
  "transforms.InsertTimeStamp.predicate": "match_resources_devicegroup_devices_topic_name",
  "transforms.InsertTimeStamp.timestamp.field": "last_modified_at",
  "transforms.tsFormat.predicate": "match_resources_devicegroup_devices_topic_name",
  "transforms.tsFormat.type": "org.apache.kafka.connect.transforms.TimestampConverter$Value",
  "transforms.tsFormat.target.type": "string",
  "transforms.tsFormat.field": "last_modified_at",
  "transforms.tsFormat.format": "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
  "predicates": "match_resources_devicegroup_devices_topic_name",
  "predicates.match_resources_devicegroup_devices_topic_name.type": "org.apache.kafka.connect.transforms.predicates.TopicNameMatches",
  "predicates.match_resources_devicegroup_devices_topic_name.pattern": "aicore.public.resources_devicegroup_devices",
  "partitioner.class": "com.canelmas.kafka.connect.FieldAndTimeBasedPartitioner",
  "partition.field.format.path" : true,
  "partition.field.name" : "rdc, env",
  "path.format": "'year'=YYYY/'month'=MM/'day'=dd",
  "timestamp.extractor" : "RecordField",
  "timestamp.field" : "last_modified_at",
  "partition.duration.ms": "60000",
  "locale": "en-US",
  "timezone": "UTC",
  "format.class": "io.confluent.connect.s3.format.json.JsonFormat",
  "s3.compression.type": "none"
}
]
